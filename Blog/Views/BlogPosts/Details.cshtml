
@model Blog.Models.BlogPost

@using Blog.Enum
@using Microsoft.AspNetCore.Identity
@inject UserManager<BlogUser> _userManager

@{
    ViewData["Title"] = "Details";
}

<div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BlogPostState)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BlogPostState)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BlogItem)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BlogItem.BlogName)
        </dd>
    </dl>
</div>

<hr />


@if(User.Identity!.IsAuthenticated)
{
    <div class="col col-md-8" id="CommentBox">
        <form asp-controller="Comments" asp-action="Create">
            <input type="hidden" name="BlogPostId" value=@Model.Id />
            <input type="hidden" asp-for="Slug" />
            <textarea class="form-control" name="CommentBody" rows="3" placeholder="Add Comment"></textarea>
            <button class="btn btn-warning">Submit</button>
        </form>
    </div>
}

else
{
    <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "BlogPosts", new { slug = Model.Slug})">Please log in to leave a comment.</a>
}

<hr />

<div class="row" id="CommentSection">
@foreach(var comment in Model.Comments.OrderByDescending(c => c.CreatedDate))
{
    <div class="col-12 my-2">
        <div class="card border-dark mb-3 w-100">
            <div class="card-header">
                @if (comment.ModeratedDate == null)
                {
                <span class="float-start">@comment.Author?.FullName</span>
                }
                else
                {
                <span class="float-start text-danger">Moderated by @comment.Moderator?.FullName</span>
                }

                @if(comment.ModeratedDate != null)
                {
                <span class="float-end text-danger">Moderated on @comment.ModeratedDate</span>
                }
                else if(comment.UpdatedDate != null)
                {
                <span class="float-end">Edited on @comment.UpdatedDate</span>
                }
                else
                {
                <span class="float-end">Created on @comment.CreatedDate</span>
                }
            </div>
            <div class="card-body text-dark">
                @if(comment.ModeratedDate == null)
                {
                <h5 class="card-title">@comment.CommentBody</h5>
                }
                else
                {
                <h6 class="text-danger fst-italic">Moderation Reason: @comment.ModerationReason</h6>
                <h5 class="card-title">@comment.ModeratedBody <span class="fst-italic text-muted ms-2">(modified...)</span></h5>
                }
            </div>
            @if(comment.AuthorId == _userManager.GetUserId(User))
            {
            <div class="card-footer"> 
                <div class="row">
                    @if(comment.ModeratedDate == null)
                    {
                    <div class="col col-md-2">
                        <button class="btnEditComment btn btn-sm btn-dark w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal">Edit</button>
                    </div>
                    <div class="col col-md-2"> 
                        <button class="btnDeleteComment btn btn-sm btn-dark w-100" data-commentId=@comment.Id>Delete</button>
                    </div>
                    }
                </div>
            </div>
            }

            @if (User.IsInRole("Moderator"))
            {
            <div class="card-footer"> 
                <div class="row">
                    <div class="col col-md-4">
                        <button class="btnModerateComment btn btn-sm btn-dark w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#moderateCommentModal">Moderate</button>
                    </div>
                </div>
            </div>
            }

        </div>
    </div>
}
</div>

<!--Modals-->
<!--Edit Modal-->
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel1">Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Edit" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalCommentId" />
                    <input type="hidden" asp-for="Slug" />

                    <div class="form-group">
                        <label class="form-label">Comment</label>
                        <textarea class="form-control" name="commentBody" id="modalCommentBody" rows="5"></textarea>
                    </div>
                    <button class="btn btn-sm btn-dark w-100">Save</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Moderate Modal-->
<div class="modal fade" id="moderateCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel2">Moderating Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Moderate" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalModerateCommentId" />

                    <div class="form-group">
                        <label class="control-label">Original Comment</label>
                        <textarea id="modalModerateCommentBody" rows="10" class="form-control" readonly></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderated Comment</label>
                        <textarea id="modalModerateCommentBody2" name="ModeratedBody" class="form-control" rows="10"></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Reason</label>
                        <select name="ModerationReason" asp-items="@Html.GetEnumSelectList<ModerationReason>()" ></select>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-dark w-100">Save</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form name="formDeleteComment" asp-action="Delete" asp-controller="Comments">
    <input type="hidden" name="Id" id="deleteCommentId" />
</form>



@section Scripts{
<script>
    document.querySelectorAll("button.btnEditComment").forEach(btn => {
        btn.addEventListener("click", function(){

            document.getElementById('modalCommentId').value = this.getAttribute('data-commentId');
            
            let parent = this.closest(".card");
            let child = parent.querySelector(".card-title");
            document.getElementById('modalCommentBody').innerText = child.innerText;
        });
    });
</script>

<script>
    document.querySelectorAll("button.btnModerateComment").forEach(btn => {
        btn.addEventListener("click", function(){

            document.getElementById('modalModerateCommentId').value = this.getAttribute('data-commentId');
            
            let parent = this.closest(".card");
            let child = parent.querySelector(".card-title");
            document.getElementById('modalModerateCommentBody').innerText = child.innerText;
            document.getElementById('modalModerateCommentBody2').innerText = child.innerText;
        });
    });
</script>


<script>
    document.querySelectorAll("button.btnDeleteComment").forEach(btn => {
        btn.addEventListener("click", function(){
            document.getElementById("deleteCommentId").value = this.getAttribute('data-commentId');
            DeleteComment();

            function DeleteComment(){
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#aaaaaa',
                    confirmButtonText: 'Delete this comment.'
                    }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Your comment has been deleted.',
                            icon: 'success',
                            showConfirmButton: false
                        })

                        setTimeout(function() {
                            document.formDeleteComment.submit();
                        }, 3000);
                    }
                })     
            }
        })
    });
</script>
}