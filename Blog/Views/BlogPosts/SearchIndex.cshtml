@using Blog.Services.Interfaces
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService _imageService;

@model IPagedList<BlogPost>

@if(ViewData["SearchTerm"] == null)
{
<span class="text-danger">You cannot search with an empty search term.</span>
}
else if(Model.TotalItemCount == 0)
{
<span class="text-danger">Sorry, we couldn't find any blog posts using the search term "@ViewData["SearchTerm"]."</span>
}
else
{
<div class="row row-cols-1 row-cols-md-3 g-2">
	@foreach(var blogPost in Model)
	{
	<a asp-action="Details" asp-controller="BlogPosts" asp-route-slug="@blogPost.Slug">
		<div class="col">
			<div class="card">
				<img src="@_imageService.ConvertByteArrayToFile(blogPost.ImageData, blogPost.ImageType)" class="card-img-top" alt="...">
				<div class="card-body">
					<h5 class="card-title">@blogPost.Title</h5>
					<p class="card-text">@blogPost.Abstract</p>
				</div>
				<div class="card-footer">
					<h5 class="card-title">Created: @blogPost.Created</h5>
				</div>
			</div>
		</div>
	</a>
	}
</div>
}

@if(Model.PageCount > 1 && ViewData["SearchTerm"] != null)
{
<div class="row">
	<div class="col">
        @Html.PagedListPager(Model, pageNum => Url.Action("SearchIndex", new { pageNum, searchTerm = ViewData["SearchTerm"] }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] {"page-item"},
                PageClasses = new string[] {"page-link"}
            })
	</div>
</div>
}